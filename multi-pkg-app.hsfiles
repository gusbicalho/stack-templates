{-# START_FILE .gitignore #-}
.stack-work/
*~
*.sqlite
{-# START_FILE {{name}}/test/hie.yaml #-}
cradle: {stack: {component: "{{name}}:{{name}}-test" }}
{-# START_FILE {{name}}/test/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}
{-# START_FILE {{name}}/test/{{name}}Spec.hs #-}
{-# LANGUAGE BlockArguments #-}
module {{name}}Spec where

import Test.Hspec
import {{name}}

spec :: Spec
spec = do
  describe "test" do
    it "works" $
      (1 :: Int) `shouldBe` 1
{-# START_FILE {{name}}/app/Main.hs #-}
module Main where

import qualified {{name}}

main :: IO ()
main = {{name}}.start
{-# START_FILE {{name}}/Setup.hs #-}
import Distribution.Simple
main = defaultMain
{-# START_FILE {{name}}/src/{{name}}.hs #-}
{-# LANGUAGE PartialTypeSignatures #-}
{-# OPTIONS_GHC -Wno-partial-type-signatures #-}
module {{name}}
  ( start
  ) where

import Control.Carrier.Lift
import Control.Carrier.Reader
import Control.Carrier.Trace.Printing
import Data.Function

start :: IO ()
start = app
      & runTrace
      & runReader (42 :: Int)
      & runM @IO

app :: _ => m ()
app = do
  trace "Running app"
  answer <- ask @Int
  trace $ "The answer is " <> show answer
{-# START_FILE {{name}}/package.yaml #-}
name:                {{name}}
version:             0.1.0.0
github:              "{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}"
author:              "{{author-name}}{{^author-name}}Author name here{{/author-name}}"
maintainer:          "{{author-email}}{{^author-email}}example@example.com{{/author-email}}"
copyright:           "{{copyright}}{{^copyright}}{{year}}{{^year}}2019{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}"

description:         Please see the README on GitHub at <https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme>

ghc-options:
- -Wall
- -Wcompat
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -Wredundant-constraints
- -foptimal-applicative-do

default-extensions:
- ApplicativeDo
- BangPatterns
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveLift
- DeriveTraversable
- DerivingStrategies
- EmptyCase
- ExistentialQuantification
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- InstanceSigs
- KindSignatures
- LambdaCase
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- OverloadedLabels
- OverloadedStrings
- PatternSynonyms
- RankNTypes
- ScopedTypeVariables
- StandaloneDeriving
- TupleSections
- TypeApplications
- TypeFamilies
- TypeFamilyDependencies
- TypeOperators
- ViewPatterns

dependencies:
- base >= 4.7 && < 5
- fused-effects
- optparse-applicative
- text

library:
  source-dirs: src

executables:
  {{name}}-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -O2
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}

tests:
  {{name}}-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    - base
    - hspec
    - QuickCheck
    - text
{-# START_FILE {{name}}/{{name}}.cabal #-}
cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: 1d2e17075bbf6466227189c41d275897f79c3558592849e20029079c05466091

name:           {{name}}
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme>
homepage:       https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme
bug-reports:    https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}/issues
author:         {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:     {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:      {{copyright}}{{^copyright}}{{year}}{{^year}}2019{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}
build-type:     Simple
extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}

library
  exposed-modules:
      {{name}}
  other-modules:
      Paths_{{name}}
  hs-source-dirs:
      src
  default-extensions: ApplicativeDo BangPatterns ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedLabels OverloadedStrings PatternSynonyms RankNTypes ScopedTypeVariables StandaloneDeriving TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators ViewPatterns
  ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints -foptimal-applicative-do
  build-depends:
      base >=4.7 && <5
    , fused-effects
    , optparse-applicative
    , text
  default-language: Haskell2010

executable {{name}}-exe
  main-is: Main.hs
  other-modules:
      Paths_{{name}}
  hs-source-dirs:
      app
  default-extensions: ApplicativeDo BangPatterns ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedLabels OverloadedStrings PatternSynonyms RankNTypes ScopedTypeVariables StandaloneDeriving TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators ViewPatterns
  ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints -foptimal-applicative-do -O2 -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      {{name}}
    , base >=4.7 && <5
    , fused-effects
    , optparse-applicative
    , text
  default-language: Haskell2010

test-suite {{name}}-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      {{name}}Spec
      Paths_{{name}}
  hs-source-dirs:
      test
  default-extensions: ApplicativeDo BangPatterns ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedLabels OverloadedStrings PatternSynonyms RankNTypes ScopedTypeVariables StandaloneDeriving TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators ViewPatterns
  ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints -foptimal-applicative-do -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      {{name}}
    , QuickCheck
    , base
    , fused-effects
    , hspec
    , optparse-applicative
    , text
  default-language: Haskell2010
{-# START_FILE .ghci #-}
:set prompt "\ESC[1;34m%s\n\ESC[0;34m\STXÎ»> \ESC[m\STX"
:set prompt-cont "\ESC[0;34m\STX | \ESC[m\STX"
:set +m
{-# START_FILE README.md #-}
# {{name}}
{-# START_FILE ghci.sh #-}
#! /usr/bin/env bash
stack ghci \
  "{{name}}:lib" --main-is "{{name}}:{{name}}-test"
{-# START_FILE .vscode/settings.json #-}
{
  "hic.executablePath": "./run-ghcide",
  "editor.detectIndentation": false,
  "editor.autoIndent": "keep",
  "editor.tabSize": 2,
  "haskell.indentationRules.enabled": false,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true
}{-# START_FILE run-ghcide #-}
#! /bin/bash
stack exec -- ghcide "$@"
{-# START_FILE stack.yaml #-}
# This file was automatically generated by 'stack init'
#
# Some commonly used options have been documented as comments in this file.
# For advanced use and comprehensive documentation of the format, please see:
# https://docs.haskellstack.org/en/stable/yaml_configuration/

resolver: nightly-2020-01-29

packages:
- {{name}}

extra-deps:
# >>> fused-effects
- fused-effects-exceptions-1.0.0.0@sha256:ee32e6e6a40ce2272603b93036e05945d79f68200b1f09624db39262724b0f98,1731
# >>> ghcide
- git: git@github.com:digital-asset/ghcide.git
  commit: 913aa5f9fa3508dcbe423aea3e0d0effe1b57d1b
- fuzzy-0.1.0.0@sha256:123b9581c587ae5422b67bbad7e81186b1ecbf86941a8049f921ddf136f2234e,833
